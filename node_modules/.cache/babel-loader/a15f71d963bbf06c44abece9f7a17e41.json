{"ast":null,"code":"import _classCallCheck from\"A:/Desktop/Coding/careerfoundry/meet/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"A:/Desktop/Coding/careerfoundry/meet/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"A:/Desktop/Coding/careerfoundry/meet/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"A:/Desktop/Coding/careerfoundry/meet/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import'./App.css';import EventList from'./EventList';import CitySearch from'./CitySearch';import NumberOfEvents from'./NumberOfEvents';import{extractLocations,getEvents}from'./api';import'./nprogress.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={events:[],locations:[]};_this.updateEvents=function(location){getEvents().then(function(events){var locationEvents=location==='all'?events:events.filter(function(event){return event.location===location;});_this.setState({events:locationEvents});});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.mounted=true;getEvents().then(function(events){_this2.setState({events:events,locations:extractLocations(events)});});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.mounted=false;}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(CitySearch,{locations:this.state.locations,updateEvents:this.updateEvents}),/*#__PURE__*/_jsx(EventList,{events:this.state.events}),/*#__PURE__*/_jsx(NumberOfEvents,{})]});}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["A:/Desktop/Coding/careerfoundry/meet/src/App.js"],"names":["React","Component","EventList","CitySearch","NumberOfEvents","extractLocations","getEvents","App","state","events","locations","updateEvents","location","then","locationEvents","filter","event","setState","mounted"],"mappings":"wdAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,OAASC,gBAAT,CAA2BC,SAA3B,KAA4C,OAA5C,CACA,MAAO,iBAAP,C,2FAEMC,CAAAA,G,+SAEJC,K,CAAQ,CACNC,MAAM,CAAE,EADF,CAENC,SAAS,CAAE,EAFL,C,OAKRC,Y,CAAe,SAACC,QAAD,CAAc,CAC3BN,SAAS,GAAGO,IAAZ,CAAiB,SAACJ,MAAD,CAAY,CAC3B,GAAMK,CAAAA,cAAc,CAAIF,QAAQ,GAAK,KAAd,CACrBH,MADqB,CAErBA,MAAM,CAACM,MAAP,CAAc,SAACC,KAAD,QAAWA,CAAAA,KAAK,CAACJ,QAAN,GAAmBA,QAA9B,EAAd,CAFF,CAGA,MAAKK,QAAL,CAAc,CACZR,MAAM,CAAEK,cADI,CAAd,EAGD,CAPD,EAQD,C,gEAED,4BAAoB,iBAClB,KAAKI,OAAL,CAAe,IAAf,CACAZ,SAAS,GAAGO,IAAZ,CAAiB,SAACJ,MAAD,CAAY,CAC3B,MAAI,CAACQ,QAAL,CAAc,CAAER,MAAM,CAANA,MAAF,CAAUC,SAAS,CAAEL,gBAAgB,CAACI,MAAD,CAArC,CAAd,EACD,CAFD,EAGD,C,oCAED,+BAAuB,CACrB,KAAKS,OAAL,CAAe,KAAf,CACD,C,sBAED,iBAAS,CACP,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,UAAD,EACE,SAAS,CAAE,KAAKV,KAAL,CAAWE,SADxB,CAEE,YAAY,CAAE,KAAKC,YAFrB,EADF,cAKE,KAAC,SAAD,EACE,MAAM,CAAE,KAAKH,KAAL,CAAWC,MADrB,EALF,cAQE,KAAC,cAAD,IARF,GADF,CAYD,C,iBA1CeR,S,EA6ClB,cAAeM,CAAAA,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport './nprogress.css';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: []\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events : \n        events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      this.setState({ events, locations: extractLocations(events) });\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <CitySearch \n          locations={this.state.locations} \n          updateEvents={this.updateEvents} \n        />\n        <EventList \n          events={this.state.events} \n        />\n        <NumberOfEvents />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}