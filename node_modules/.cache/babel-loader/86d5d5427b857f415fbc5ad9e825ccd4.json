{"ast":null,"code":"var _jsxFileName = \"A:\\\\Desktop\\\\Coding\\\\careerfoundry\\\\meet\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\nimport './nprogress.css';\nimport WelcomeScreen from './WelcomeScreen'; // import { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      events: [],\n      locations: [],\n      numberOfEvents: 32,\n      offlineText: '',\n      showWelcomeScreen: undefined\n    };\n\n    this.updateNumberOfEvents = numberOfEvents => {\n      this.setState({\n        numberOfEvents\n      }, this.updateEvents(this.state.locations, numberOfEvents));\n    };\n\n    this.updateEvents = (location, eventCount) => {\n      getEvents().then(events => {\n        const locationEvents = location === 'all' ? events : events.filter(event => event.location === location);\n\n        if (this.mounted) {\n          this.setState({\n            events: locationEvents.slice(0, this.state.numberOfEvents),\n            numberOfEvents: eventCount\n          });\n        }\n      });\n    };\n\n    this.getData = () => {\n      const {\n        locations,\n        events\n      } = this.state;\n      const data = locations.map(location => {\n        const number = events.filter(event => event.location === location).length;\n        const city = location.split(', ').shift();\n        return {\n          city,\n          number\n        };\n      });\n      return data;\n    };\n  }\n\n  // async componentDidMount() {\n  //   this.mounted = true;\n  //   const accessToken = localStorage.getItem('access_token');\n  //   const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n  //   const searchParams = new URLSearchParams(window.location.search);\n  //   const code = searchParams.get('code');\n  //   this.setState({ showWelcomeScreen: !(code || isTokenValid ) });\n  //   if ((code || isTokenValid) && this.mounted) {\n  //     getEvents().then((events) => {\n  //       if (this.mounted) {\n  //         this.setState({ events, locations: extractLocations(events) });\n  //       }\n  //     });\n  //   }  \n  // };\n  async componentDidMount() {\n    this.mounted = true;\n\n    if (navigator.onLine && !window.location.href.startsWith('http://localhost')) {\n      const accessToken = localStorage.getItem('access_token');\n      const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n      const searchParams = new URLSearchParams(window.location.search);\n      const code = searchParams.get(\"code\");\n      this.setState({\n        showWelcomeScreen: !(code || isTokenValid)\n      });\n\n      if ((code || isTokenValid) && this.mounted) {\n        getEvents().then(events => {\n          if (this.mounted) {\n            this.setState({\n              events,\n              locations: extractLocations(events),\n              warningText: ''\n            });\n          }\n        });\n      }\n    } else {\n      getEvents().then(events => {\n        if (this.mounted) {\n          this.setState({\n            events,\n            locations: extractLocations(events),\n            warningText: 'You are offline. The displayed event list may not be up to date.',\n            showWelcomeScreen: false\n          });\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    if (this.state.showWelcomeScreen === undefined) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 60\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MEET APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CitySearch, {\n        locations: this.state.locations,\n        updateEvents: this.updateEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberOfEvents, {\n        numberOfEvents: this.state.numberOfEvents,\n        updateNumberOfEvents: this.updateNumberOfEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventList, {\n        events: this.state.events,\n        numberOfEvents: this.state.numberOfEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n        showWelcomeScreen: this.state.showWelcomeScreen,\n        getAccessToken: () => {\n          getAccessToken();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["A:/Desktop/Coding/careerfoundry/meet/src/App.js"],"names":["React","Component","EventList","CitySearch","NumberOfEvents","extractLocations","getEvents","checkToken","getAccessToken","WelcomeScreen","App","state","events","locations","numberOfEvents","offlineText","showWelcomeScreen","undefined","updateNumberOfEvents","setState","updateEvents","location","eventCount","then","locationEvents","filter","event","mounted","slice","getData","data","map","number","length","city","split","shift","componentDidMount","navigator","onLine","window","href","startsWith","accessToken","localStorage","getItem","isTokenValid","error","searchParams","URLSearchParams","search","code","get","warningText","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\nimport './nprogress.css';\nimport WelcomeScreen from './WelcomeScreen';\n// import { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    offlineText: '',\n    showWelcomeScreen: undefined\n  };\n\n  // async componentDidMount() {\n  //   this.mounted = true;\n  //   const accessToken = localStorage.getItem('access_token');\n  //   const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n  //   const searchParams = new URLSearchParams(window.location.search);\n  //   const code = searchParams.get('code');\n  //   this.setState({ showWelcomeScreen: !(code || isTokenValid ) });\n  //   if ((code || isTokenValid) && this.mounted) {\n  //     getEvents().then((events) => {\n  //       if (this.mounted) {\n  //         this.setState({ events, locations: extractLocations(events) });\n  //       }\n  //     });\n  //   }  \n  // };\n\n  async componentDidMount() {\n    this.mounted = true;\n    if (navigator.onLine && !window.location.href.startsWith('http://localhost')) {\n      const accessToken = localStorage.getItem('access_token');\n      const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n      const searchParams = new URLSearchParams(window.location.search);\n      const code = searchParams.get(\"code\");\n      this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n      if ((code || isTokenValid) && this.mounted) {\n        getEvents().then((events) => {\n          if (this.mounted) {\n            this.setState({\n              events,\n              locations: extractLocations(events),\n              warningText: ''\n            });\n          }\n        });\n      }\n    } else {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({\n            events,\n            locations: extractLocations(events),\n            warningText: 'You are offline. The displayed event list may not be up to date.',\n            showWelcomeScreen: false\n          });\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  updateNumberOfEvents = (numberOfEvents) => {\n    this.setState(\n      { \n        numberOfEvents \n      }, \n      this.updateEvents(this.state.locations, numberOfEvents)\n    );\n  };\n\n  updateEvents = (location, eventCount) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ?\n        events : \n        events.filter((event) => event.location === location);\n      if (this.mounted) {\n        this.setState({\n          events: locationEvents.slice(0, this.state.numberOfEvents),\n          numberOfEvents: eventCount\n        });\n      }\n    });\n  };\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(', ').shift()\n      return { city, number };\n    })\n    return data;\n  };\n  \n  render() {\n\n    if (this.state.showWelcomeScreen === undefined) return <div className='App' />\n\n    return (\n      <div className='App'>\n        <h1>MEET APP</h1>\n\n        <CitySearch \n          locations={this.state.locations} \n          updateEvents={this.updateEvents} \n        />\n\n        <NumberOfEvents \n          numberOfEvents={this.state.numberOfEvents} \n          updateNumberOfEvents={this.updateNumberOfEvents} \n        />\n\n        {/* <ScatterChart\n          width={400}\n          height={400}\n          margin={{\n            top: 20, right: 20, bottom: 20, left: 20,\n          }}\n        >\n          <CartesianGrid />\n          <XAxis type=\"number\" dataKey=\"x\" name=\"stature\" unit=\"cm\" />\n          <YAxis type=\"number\" dataKey=\"y\" name=\"weight\" unit=\"kg\" />\n          <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n          <Scatter name=\"A school\"  fill=\"#8884d8\" />\n        </ScatterChart> */}\n\n        <EventList \n          events={this.state.events} \n          numberOfEvents={this.state.numberOfEvents}\n        />\n        \n        \n\n        <WelcomeScreen \n        showWelcomeScreen={this.state.showWelcomeScreen}\n        getAccessToken={() => { getAccessToken() }} \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}