{"ast":null,"code":"import _slicedToArray from\"A:/Desktop/Coding/careerfoundry/meet/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{PieChart,Pie,Cell,ResponsiveContainer}from'recharts';import{jsx as _jsx}from\"react/jsx-runtime\";var EventGenre=function EventGenre(_ref){var events=_ref.events;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];useEffect(function(){setData(function(){return getData();});},[events]);var getData=function getData(){var genres=['React','JavaScript','Node','jQuery','AngularJS'];var data=genres.map(function(genre){var value=events.filter(function(_ref2){var summary=_ref2.summary;return summary.split(' ').includes(genre);}).length;return{name:genre,value:value};});return data;};var COLORS=['#0088FE','#00C49F','#FFBB28','#FF8042','#85D2DB'];return/*#__PURE__*/_jsx(ResponsiveContainer,{height:400,children:/*#__PURE__*/_jsx(PieChart,{width:400,height:400,children:/*#__PURE__*/_jsx(Pie,{data:data,cx:200,cy:200,labelLine:false,outerRadius:80,fill:\"#8884d8\",dataKey:\"value\",label:function label(_ref3){var name=_ref3.name,percent=_ref3.percent;return\"\".concat(name,\" \").concat((percent*100).toFixed(0),\"%\");},children:data.map(function(entry,index){return/*#__PURE__*/_jsx(Cell,{fill:COLORS[index%COLORS.length],name:entry.name},\"cell-\".concat(index));})})})});};export default EventGenre;","map":{"version":3,"sources":["A:/Desktop/Coding/careerfoundry/meet/src/EventGenre.js"],"names":["React","useEffect","useState","PieChart","Pie","Cell","ResponsiveContainer","EventGenre","events","data","setData","getData","genres","map","genre","value","filter","summary","split","includes","length","name","COLORS","percent","toFixed","entry","index"],"mappings":"0HAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA0C,OAA1C,CACA,OAASC,QAAT,CAAmBC,GAAnB,CAAwBC,IAAxB,CAA8BC,mBAA9B,KAAyD,UAAzD,C,2CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,CAE/B,cAAwBN,QAAQ,CAAC,EAAD,CAAhC,wCAAOO,IAAP,eAAaC,OAAb,eAEAT,SAAS,CAAC,UAAM,CACZS,OAAO,CAAC,iBAAMC,CAAAA,OAAO,EAAb,EAAD,CAAP,CACH,CAFQ,CAEN,CAACH,MAAD,CAFM,CAAT,CAIA,GAAMG,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CAClB,GAAMC,CAAAA,MAAM,CAAG,CAAC,OAAD,CAAU,YAAV,CAAwB,MAAxB,CAAgC,QAAhC,CAA0C,WAA1C,CAAf,CACA,GAAMH,CAAAA,IAAI,CAAGG,MAAM,CAACC,GAAP,CAAW,SAACC,KAAD,CAAW,CAC/B,GAAMC,CAAAA,KAAK,CAAGP,MAAM,CAACQ,MAAP,CAAc,mBAAGC,CAAAA,OAAH,OAAGA,OAAH,OAAiBA,CAAAA,OAAO,CAACC,KAAR,CAAc,GAAd,EAAmBC,QAAnB,CAA4BL,KAA5B,CAAjB,EAAd,EAAmEM,MAAjF,CACA,MAAO,CAAEC,IAAI,CAAEP,KAAR,CAAeC,KAAK,CAALA,KAAf,CAAP,CACH,CAHY,CAAb,CAIA,MAAON,CAAAA,IAAP,CACH,CAPD,CASA,GAAMa,CAAAA,MAAM,CAAG,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAAf,CAEA,mBACI,KAAC,mBAAD,EAAqB,MAAM,CAAE,GAA7B,uBACA,KAAC,QAAD,EAAU,KAAK,CAAE,GAAjB,CAAsB,MAAM,CAAE,GAA9B,uBACE,KAAC,GAAD,EACE,IAAI,CAAEb,IADR,CAEE,EAAE,CAAE,GAFN,CAGE,EAAE,CAAE,GAHN,CAIE,SAAS,CAAE,KAJb,CAKE,WAAW,CAAE,EALf,CAME,IAAI,CAAC,SANP,CAOE,OAAO,CAAC,OAPV,CAQE,KAAK,CAAE,yBAAGY,CAAAA,IAAH,OAAGA,IAAH,CAASE,OAAT,OAASA,OAAT,iBAA0BF,IAA1B,aAAkC,CAACE,OAAO,CAAG,GAAX,EAAgBC,OAAhB,CAAwB,CAAxB,CAAlC,OART,UAWQf,IAAI,CAACI,GAAL,CAAS,SAACY,KAAD,CAAQC,KAAR,qBAAkB,KAAC,IAAD,EAA4B,IAAI,CAAEJ,MAAM,CAACI,KAAK,CAAGJ,MAAM,CAACF,MAAhB,CAAxC,CAAiE,IAAI,CAAEK,KAAK,CAACJ,IAA7E,iBAAmBK,KAAnB,EAAlB,EAAT,CAXR,EADF,EADA,EADJ,CAoBH,CAvCD,CAyCA,cAAenB,CAAAA,UAAf","sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\r\n\r\n\r\n\r\nconst EventGenre = ({ events }) => {\r\n\r\n    const [data, setData] = useState([]);\r\n   \r\n    useEffect(() => {\r\n        setData(() => getData());\r\n    }, [events]);\r\n\r\n    const getData = () => {\r\n        const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\r\n        const data = genres.map((genre) => {\r\n            const value = events.filter(({ summary }) => summary.split(' ').includes(genre)).length;\r\n            return { name: genre, value};\r\n        });\r\n        return data;\r\n    };\r\n\r\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#85D2DB'];\r\n\r\n    return (\r\n        <ResponsiveContainer height={400}>\r\n        <PieChart width={400} height={400}>\r\n          <Pie\r\n            data={data}\r\n            cx={200}\r\n            cy={200}\r\n            labelLine={false}\r\n            outerRadius={80}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n            label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n          >\r\n              {\r\n                  data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} name={entry.name} />)\r\n              }\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    )\r\n};\r\n\r\nexport default EventGenre;\r\n\r\n"]},"metadata":{},"sourceType":"module"}