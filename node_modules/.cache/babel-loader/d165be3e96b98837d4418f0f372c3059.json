{"ast":null,"code":"var _jsxFileName = \"A:\\\\Desktop\\\\Coding\\\\careerfoundry\\\\meet\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\nimport './nprogress.css';\nimport WelcomeScreen from './WelcomeScreen';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport EventGenre from './EventGenre';\nimport { WarningAlert } from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      events: [],\n      locations: [],\n      numberOfEvents: 32,\n      currentLocation: 'all',\n      warningText: '',\n      showWelcomeScreen: undefined\n    };\n\n    this.updateNumberOfEvents = number => {\n      const newNum = number;\n      this.setState({\n        numberOfEvents: newNum\n      });\n      this.updateEvents(this.state.currentLocation);\n    };\n\n    this.updateEvents = (location, eventCount) => {\n      getEvents().then(events => {\n        const locationEvents = location === 'all' ? events : events.filter(event => event.location === location);\n\n        if (this.mounted) {\n          this.setState({\n            events: locationEvents.slice(0, this.state.numberOfEvents),\n            numberOfEvents: eventCount\n          });\n        }\n      });\n    };\n\n    this.getData = () => {\n      const {\n        locations,\n        events\n      } = this.state;\n      const data = locations.map(location => {\n        const number = events.filter(event => event.location === location).length;\n        const city = location.split(', ').shift();\n        return {\n          city,\n          number\n        };\n      });\n      return data;\n    };\n  }\n\n  // async componentDidMount() {\n  //   this.mounted = true;\n  //   const accessToken = localStorage.getItem('access_token');\n  //   const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n  //   const searchParams = new URLSearchParams(window.location.search);\n  //   const code = searchParams.get('code');\n  //   this.setState({ showWelcomeScreen: !(code || isTokenValid ) });\n  //   if ((code || isTokenValid) && this.mounted) {\n  //     getEvents().then((events) => {\n  //       if (this.mounted) {\n  //         this.setState({ events, locations: extractLocations(events) });\n  //       }\n  //     });\n  //   }  \n  // };\n  // async componentDidMount() {\n  //   this.mounted = true;\n  //   if (navigator.onLine && !window.location.href.startsWith('http://localhost')) {\n  //     const accessToken = localStorage.getItem('access_token');\n  //     const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n  //     const searchParams = new URLSearchParams(window.location.search);\n  //     const code = searchParams.get(\"code\");\n  //     this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n  //     if ((code || isTokenValid) && this.mounted) {\n  //       getEvents().then((events) => {\n  //         if (this.mounted) {\n  //           this.setState({\n  //             events,\n  //             locations: extractLocations(events),\n  //             warningText: ''\n  //           });\n  //         }\n  //       });\n  //     }\n  //   } else {\n  //     getEvents().then((events) => {\n  //       if (this.mounted) {\n  //         this.setState({\n  //           events,\n  //           locations: extractLocations(events),\n  //           warningText: 'You are offline. The displayed event list may not be up to date.',\n  //           showWelcomeScreen: false\n  //         });\n  //       }\n  //     });\n  //   }\n  // }\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    this.setState({\n      showWelcomeScreen: !(code || isTokenValid)\n    });\n\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then(events => {\n        if (this.mounted) {\n          this.setState({\n            events,\n            locations: extractLocations(events)\n          });\n        }\n      });\n    }\n\n    if (!navigator.onLine) {\n      this.setState({\n        OfflineAlertText: 'You are not connected to the internet'\n      });\n    } else {\n      this.setState({\n        OfflineAlertText: ''\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const {\n      events\n    } = this.state;\n    if (this.state.showWelcomeScreen === undefined) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 60\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MEET APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CitySearch, {\n        locations: this.state.locations,\n        updateEvents: this.updateEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberOfEvents, {\n        numberOfEvents: this.state.numberOfEvents,\n        updateNumberOfEvents: this.updateNumberOfEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-vis-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(EventGenre, {\n          events: events\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            margin: {\n              top: 20,\n              right: 20,\n              bottom: 20,\n              left: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              type: \"category\",\n              dataKey: \"city\",\n              name: \"city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              type: \"number\",\n              dataKey: \"number\",\n              name: \"number of events\",\n              allowDecimals: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              cursor: {\n                strokeDasharray: '3 3'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: this.getData(),\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventList, {\n        events: this.state.events,\n        numberOfEvents: this.state.numberOfEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n        showWelcomeScreen: this.state.showWelcomeScreen,\n        getAccessToken: () => {\n          getAccessToken();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["A:/Desktop/Coding/careerfoundry/meet/src/App.js"],"names":["React","Component","EventList","CitySearch","NumberOfEvents","extractLocations","getEvents","checkToken","getAccessToken","WelcomeScreen","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","EventGenre","WarningAlert","App","state","events","locations","numberOfEvents","currentLocation","warningText","showWelcomeScreen","undefined","updateNumberOfEvents","number","newNum","setState","updateEvents","location","eventCount","then","locationEvents","filter","event","mounted","slice","getData","data","map","length","city","split","shift","componentDidMount","accessToken","localStorage","getItem","isTokenValid","error","searchParams","URLSearchParams","window","search","code","get","navigator","onLine","OfflineAlertText","componentWillUnmount","render","top","right","bottom","left","strokeDasharray"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\r\nimport './nprogress.css';\r\nimport WelcomeScreen from './WelcomeScreen';\r\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\nimport EventGenre from './EventGenre';\r\nimport { WarningAlert } from './Alert';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    numberOfEvents: 32,\r\n    currentLocation: 'all',\r\n    warningText: '',\r\n    showWelcomeScreen: undefined\r\n  };\r\n\r\n  updateNumberOfEvents = (number) => {\r\n    const newNum = number;\r\n    this.setState({\r\n      numberOfEvents: newNum\r\n    });\r\n    this.updateEvents(this.state.currentLocation);\r\n  };\r\n\r\n  // async componentDidMount() {\r\n  //   this.mounted = true;\r\n  //   const accessToken = localStorage.getItem('access_token');\r\n  //   const isTokenValid = (await checkToken(accessToken)).error ? false : true;\r\n  //   const searchParams = new URLSearchParams(window.location.search);\r\n  //   const code = searchParams.get('code');\r\n  //   this.setState({ showWelcomeScreen: !(code || isTokenValid ) });\r\n  //   if ((code || isTokenValid) && this.mounted) {\r\n  //     getEvents().then((events) => {\r\n  //       if (this.mounted) {\r\n  //         this.setState({ events, locations: extractLocations(events) });\r\n  //       }\r\n  //     });\r\n  //   }  \r\n  // };\r\n\r\n  // async componentDidMount() {\r\n  //   this.mounted = true;\r\n  //   if (navigator.onLine && !window.location.href.startsWith('http://localhost')) {\r\n  //     const accessToken = localStorage.getItem('access_token');\r\n  //     const isTokenValid = (await checkToken(accessToken)).error ? false : true;\r\n  //     const searchParams = new URLSearchParams(window.location.search);\r\n  //     const code = searchParams.get(\"code\");\r\n  //     this.setState({ showWelcomeScreen: !(code || isTokenValid) });\r\n  //     if ((code || isTokenValid) && this.mounted) {\r\n  //       getEvents().then((events) => {\r\n  //         if (this.mounted) {\r\n  //           this.setState({\r\n  //             events,\r\n  //             locations: extractLocations(events),\r\n  //             warningText: ''\r\n  //           });\r\n  //         }\r\n  //       });\r\n  //     }\r\n  //   } else {\r\n  //     getEvents().then((events) => {\r\n  //       if (this.mounted) {\r\n  //         this.setState({\r\n  //           events,\r\n  //           locations: extractLocations(events),\r\n  //           warningText: 'You are offline. The displayed event list may not be up to date.',\r\n  //           showWelcomeScreen: false\r\n  //         });\r\n  //       }\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  async componentDidMount() {\r\n    this.mounted = true;\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const isTokenValid = (await checkToken(accessToken)).error ? false: true;\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get(\"code\");\r\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\r\n      if ((code || isTokenValid) && this.mounted) {\r\n        getEvents().then((events) => {\r\n      if (this.mounted) {\r\n        this.setState({ events, locations: extractLocations(events) });\r\n        }\r\n      });\r\n    }\r\n      if (!navigator.onLine) {\r\n        this.setState({\r\n          OfflineAlertText: 'You are not connected to the internet'\r\n        });\r\n      } else {\r\n        this.setState({\r\n          OfflineAlertText: ''\r\n        });\r\n      }\r\n  }\r\n\r\n\r\n  \r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  };\r\n\r\n  updateEvents = (location, eventCount) => {\r\n    getEvents().then((events) => {\r\n      const locationEvents = (location === 'all') ?\r\n        events : \r\n        events.filter((event) => event.location === location);\r\n      if (this.mounted) {\r\n        this.setState({\r\n          events: locationEvents.slice(0, this.state.numberOfEvents),\r\n          numberOfEvents: eventCount\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  getData = () => {\r\n    const { locations, events } = this.state;\r\n    const data = locations.map((location) => {\r\n      const number = events.filter((event) => event.location === location).length\r\n      const city = location.split(', ').shift()\r\n      return { city, number };\r\n    })\r\n    return data;\r\n  };\r\n  \r\n  render() {\r\n    \r\n    const { events } = this.state;\r\n\r\n    if (this.state.showWelcomeScreen === undefined) return <div className='App' />\r\n\r\n    return (\r\n      <div className='App'>\r\n        <h1>MEET APP</h1>\r\n\r\n        <CitySearch \r\n          locations={this.state.locations} \r\n          updateEvents={this.updateEvents} \r\n        />\r\n\r\n        <NumberOfEvents \r\n          numberOfEvents={this.state.numberOfEvents} \r\n          updateNumberOfEvents={this.updateNumberOfEvents} \r\n        />\r\n\r\n        <div className='data-vis-wrapper'>\r\n\r\n        <EventGenre events={events} />\r\n\r\n        <ResponsiveContainer height={400} >\r\n          <ScatterChart\r\n            margin={{\r\n              top: 20, right: 20, bottom: 20, left: 20,\r\n            }}\r\n          >\r\n            <CartesianGrid />\r\n            <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\r\n            <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false} />\r\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n            <Scatter data={this.getData()} fill=\"#8884d8\" />\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n\r\n        </div>\r\n                \r\n        <EventList \r\n          events={this.state.events} \r\n          numberOfEvents={this.state.numberOfEvents}\r\n        />     \r\n\r\n        <WelcomeScreen \r\n        showWelcomeScreen={this.state.showWelcomeScreen}\r\n        getAccessToken={() => { getAccessToken() }} \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}