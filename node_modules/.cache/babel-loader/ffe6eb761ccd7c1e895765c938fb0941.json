{"ast":null,"code":"import _classCallCheck from\"A:/Desktop/Coding/careerfoundry/meet/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"A:/Desktop/Coding/careerfoundry/meet/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"A:/Desktop/Coding/careerfoundry/meet/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"A:/Desktop/Coding/careerfoundry/meet/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CitySearch=/*#__PURE__*/function(_Component){_inherits(CitySearch,_Component);var _super=_createSuper(CitySearch);function CitySearch(){var _this;_classCallCheck(this,CitySearch);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={query:'',suggestions:[]};_this.handleInputChanged=function(event){var value=event.target.value;var suggestions=_this.props.locations.filter(function(location){return location.toUpperCase().indexOf(value.toUpperCase())>-1;});_this.setState({query:value,suggestions:suggestions});};_this.handleItemClicked=function(suggestion){_this.setState({query:suggestion});_this.props.updateEvents(suggestion);};return _this;}_createClass(CitySearch,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"CitySearch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"city\",value:this.state.query,onChange:this.handleInputChanged}),/*#__PURE__*/_jsxs(\"ul\",{className:\"suggestions\",children:[this.state.suggestions.map(function(suggestion){return/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){return _this2.handleItemClicked(suggestion);},children:suggestion},suggestion);}),/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){return _this2.handleItemClicked('all');},children:/*#__PURE__*/_jsx(\"b\",{children:\"See all Cities\"})})]})]});}}]);return CitySearch;}(Component);export default CitySearch;","map":{"version":3,"sources":["A:/Desktop/Coding/careerfoundry/meet/src/CitySearch.js"],"names":["React","Component","CitySearch","state","query","suggestions","handleInputChanged","event","value","target","props","locations","filter","location","toUpperCase","indexOf","setState","handleItemClicked","suggestion","updateEvents","map"],"mappings":"wdAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,2FAEMC,CAAAA,U,2UAEFC,K,CAAQ,CACJC,KAAK,CAAE,EADH,CAEJC,WAAW,CAAE,EAFT,C,OAKRC,kB,CAAqB,SAACC,KAAD,CAAW,CAC5B,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B,CACA,GAAMH,CAAAA,WAAW,CAAG,MAAKK,KAAL,CAAWC,SAAX,CAAqBC,MAArB,CAA4B,SAACC,QAAD,CAAc,CAC1D,MAAOA,CAAAA,QAAQ,CAACC,WAAT,GAAuBC,OAAvB,CAA+BP,KAAK,CAACM,WAAN,EAA/B,EAAsD,CAAC,CAA9D,CACH,CAFmB,CAApB,CAGA,MAAKE,QAAL,CAAc,CACVZ,KAAK,CAAEI,KADG,CAEVH,WAAW,CAAXA,WAFU,CAAd,EAIH,C,OAEDY,iB,CAAoB,SAACC,UAAD,CAAgB,CAChC,MAAKF,QAAL,CAAc,CACVZ,KAAK,CAAEc,UADG,CAAd,EAIA,MAAKR,KAAL,CAAWS,YAAX,CAAwBD,UAAxB,EACH,C,4DAED,iBAAS,iBACL,mBACI,aAAK,SAAS,CAAC,YAAf,wBACI,cACI,IAAI,CAAC,MADT,CAEI,SAAS,CAAC,MAFd,CAGI,KAAK,CAAE,KAAKf,KAAL,CAAWC,KAHtB,CAII,QAAQ,CAAE,KAAKE,kBAJnB,EADJ,cAOI,YAAI,SAAS,CAAC,aAAd,WACK,KAAKH,KAAL,CAAWE,WAAX,CAAuBe,GAAvB,CAA2B,SAACF,UAAD,qBACxB,WAEI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACD,iBAAL,CAAuBC,UAAvB,CAAN,EAFb,UAGEA,UAHF,EACSA,UADT,CADwB,EAA3B,CADL,cAOI,WAAI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACD,iBAAL,CAAuB,KAAvB,CAAN,EAAb,uBACI,qCADJ,EAPJ,GAPJ,GADJ,CAqBH,C,wBAhDoBhB,S,EAmDzB,cAAeC,CAAAA,UAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass CitySearch extends Component {\r\n\r\n    state = {\r\n        query: '',\r\n        suggestions: []\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        })\r\n        this.setState({\r\n            query: value,\r\n            suggestions,\r\n        });\r\n    };\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion\r\n        });\r\n\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='CitySearch'>\r\n                <input\r\n                    type='text'\r\n                    className='city'\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                />\r\n                <ul className='suggestions'>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li \r\n                            key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >{suggestion}</li>\r\n                    ))}\r\n                    <li onClick={() => this.handleItemClicked('all')}>\r\n                        <b>See all Cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;"]},"metadata":{},"sourceType":"module"}