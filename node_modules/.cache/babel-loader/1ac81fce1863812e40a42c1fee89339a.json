{"ast":null,"code":"// // This function takes an events array, then uses map to create a new array with only locations.\n// // It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\n// // The set will remove al duplicates from the array.\nimport { mockData } from \"./mock-data\";\nimport axios from 'axios';\nimport NProgress from 'nprogress';\nexport const extractLocations = events => {\n  var extractLocations = events.map(event => event.location);\n  var locations = [...new Set(extractLocations)];\n  return locations;\n};\nexport const checkToken = async accessToken => {\n  const result = await fetch(`https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`).then(res => res.json()).catch(error => error.json());\n  console.log(result + ' result');\n  return result;\n};\n\nconst getToken = async code => {\n  const encodeCode = encodeURIComponent(code);\n  const {\n    access_token\n  } = await fetch(`https://o1k84bi5nl.execute-api.eu-west-3.amazonaws.com/dev/api/token/${encodeCode}`).then(res => {\n    return res.json();\n  }).catch(error => error);\n  access_token && localStorage.setItem('access_token', access_token);\n  return access_token;\n};\n\nexport const getAccessToken = async () => {\n  const accessToken = localStorage.getItem('access_token');\n  const tokenCheck = accessToken && (await checkToken(accessToken));\n\n  if (!accessToken || tokenCheck.error) {\n    await localStorage.removeItem('access_token');\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = await searchParams.get('code');\n\n    if (!code) {\n      console.log(accessToken + 'accessToken SECOND');\n      const results = await axios.get('https://o1k84bi5nl.execute-api.eu-west-3.amazonaws.com/dev/api/get-auth-url', {\n        headers: {\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      const {\n        authUrl\n      } = results.data;\n      console.log(accessToken + 'accessToken SECOND');\n      return window.location.href = authUrl;\n    }\n\n    return code && getToken(code);\n  }\n\n  return accessToken;\n}; // export const getEvents = async () => {\n//     // NProgress.start();\n//     if (window.location.href.startsWith('http://localhost')) {\n//         console.log('mockData localhost running');\n//         // NProgress.done();\n//         return mockData;\n//     }\n//     if (!navigator.onLine) {\n//         console.log('Im offline');\n//         const data = await localStorage.getItem(\"lastEvents\");\n//         // NProgress.done();\n//         return data ? JSON.parse(data).events : [];\n//     }\n//     const token = await getAccessToken();\n//     console.log(token + ' - accessToken')\n//     if (token) {\n//         console.log('getEvents token: ', token)\n//         removeQuery();\n//         const url = `https://317h4535nd.execute-api.eu-west-3.amazonaws.com/dev/api/get-events/${token}`;\n//         console.log('URL - ' + url);\n//         const result = await axios.get(url);\n//         if (result.data) {\n//             var locations = extractLocations(result.data.events);\n//             localStorage.setItem('lastEvents', JSON.stringify(result.data));\n//             localStorage.setItem('locations', JSON.stringify(locations));\n//         }\n//         // NProgress.done();\n//         return result.data.events;\n//     }\n// };\n\nexport const getEvents = async () => {\n  if (window.location.href.startsWith('http://localhost')) {\n    console.log('mockData for localhost');\n    return mockData;\n  }\n\n  if (!navigator.onLine) {\n    console.log('Im offline');\n    const data = await localStorage.getItem(\"lastEvents\");\n    console.log(data + ' this is data'); // NProgress.done();\n\n    return data ? JSON.parse(data).events : [];\n  }\n\n  const token = await getAccessToken();\n  console.log('access token' + token);\n\n  if (token) {\n    const url = `https://317h4535nd.execute-api.eu-west-3.amazonaws.com/dev/api/get-events/${token}`;\n    console.log('URL is - ' + url);\n    const result = await axios.get(url, {\n      headers: {\n        'Access-Control-Allow-Origin': '*'\n      }\n    });\n    console.log(result.data + ' THIS IS RESULT DATA');\n    console.log(result.data.events + ' THIS IS RESULT DATA EVENTS');\n\n    if (result.data) {\n      var locations = extractLocations(result.data.events);\n      localStorage.setItem('lastEvents', JSON.stringify(result.data));\n      localStorage.setItem('locations', JSON.stringify(locations));\n    }\n\n    return result.data.events;\n  }\n};\n\nconst removeQuery = () => {\n  if (window.history.pushState && window.location.pathname) {\n    var newurl = window.location.protocol + '//' + window.location.host + window.location.pathname;\n    window.history.pushState('', '', newurl);\n  } else {\n    newurl = window.location.protocol + '//' + window.location.host;\n    window.history.pushState('', '', newurl);\n  }\n};","map":{"version":3,"sources":["A:/Desktop/Coding/careerfoundry/meet/src/api.js"],"names":["mockData","axios","NProgress","extractLocations","events","map","event","location","locations","Set","checkToken","accessToken","result","fetch","then","res","json","catch","error","console","log","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","getAccessToken","getItem","tokenCheck","removeItem","searchParams","URLSearchParams","window","search","get","results","headers","authUrl","data","href","getEvents","startsWith","navigator","onLine","JSON","parse","token","url","stringify","removeQuery","history","pushState","pathname","newurl","protocol","host"],"mappings":"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","sourcesContent":["// // This function takes an events array, then uses map to create a new array with only locations.\r\n// // It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n// // The set will remove al duplicates from the array.\r\n\r\nimport { mockData } from \"./mock-data\";\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\n\r\nexport const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\nexport const checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n    console.log(result + ' result');\r\n\r\n    return result;\r\n};\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n        `https://o1k84bi5nl.execute-api.eu-west-3.amazonaws.com/dev/api/token/${encodeCode}`\r\n    )\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem('access_token', access_token);\r\n\r\n    return access_token;\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem('access_token');\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get('code');\r\n        if (!code) {\r\n            console.log(accessToken + 'accessToken SECOND');\r\n            const results = await axios.get(\r\n                'https://o1k84bi5nl.execute-api.eu-west-3.amazonaws.com/dev/api/get-auth-url', {\r\n                    headers: {\r\n                        'Access-Control-Allow-Origin': '*'\r\n                    }\r\n                }\r\n            );\r\n            const { authUrl } = results.data;\r\n            console.log(accessToken + 'accessToken SECOND');\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n};\r\n\r\n// export const getEvents = async () => {\r\n//     // NProgress.start();\r\n\r\n//     if (window.location.href.startsWith('http://localhost')) {\r\n//         console.log('mockData localhost running');\r\n//         // NProgress.done();\r\n//         return mockData;\r\n//     }\r\n\r\n//     if (!navigator.onLine) {\r\n//         console.log('Im offline');\r\n//         const data = await localStorage.getItem(\"lastEvents\");\r\n//         // NProgress.done();\r\n//         return data ? JSON.parse(data).events : [];\r\n//     }\r\n\r\n//     const token = await getAccessToken();\r\n//     console.log(token + ' - accessToken')\r\n\r\n//     if (token) {\r\n//         console.log('getEvents token: ', token)\r\n//         removeQuery();\r\n//         const url = `https://317h4535nd.execute-api.eu-west-3.amazonaws.com/dev/api/get-events/${token}`;\r\n//         console.log('URL - ' + url);\r\n//         const result = await axios.get(url);\r\n//         if (result.data) {\r\n//             var locations = extractLocations(result.data.events);\r\n//             localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n//             localStorage.setItem('locations', JSON.stringify(locations));\r\n//         }\r\n//         // NProgress.done();\r\n//         return result.data.events;\r\n//     }\r\n\r\n// };\r\n\r\nexport const getEvents = async () => {\r\n    \r\n    if (window.location.href.startsWith('http://localhost')) {\r\n        console.log('mockData for localhost');\r\n        return mockData;\r\n    }\r\n\r\n    if (!navigator.onLine) {\r\n        console.log('Im offline');\r\n        const data = await localStorage.getItem(\"lastEvents\");\r\n        console.log(data + ' this is data');\r\n        // NProgress.done();\r\n        return data ? JSON.parse(data).events : [];\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n    console.log('access token' + token);\r\n\r\n    if (token) {\r\n        const url = `https://317h4535nd.execute-api.eu-west-3.amazonaws.com/dev/api/get-events/${token}`;\r\n        console.log('URL is - ' + url);\r\n        const result = await axios.get(url, {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*'\r\n            }\r\n        });\r\n        console.log(result.data + ' THIS IS RESULT DATA');\r\n        console.log(result.data.events + ' THIS IS RESULT DATA EVENTS')\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem('lastEvents', JSON.stringify(result.data));\r\n            localStorage.setItem('locations', JSON.stringify(locations));\r\n        }\r\n        return result.data.events;\r\n    }\r\n\r\n};\r\n\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol +\r\n            '//' +\r\n            window.location.host +\r\n            window.location.pathname;\r\n            window.history.pushState('', '', newurl);\r\n    } else {\r\n        newurl = \r\n            window.location.protocol + '//' + \r\n            window.location.host;\r\n            window.history.pushState('', '', newurl);\r\n    }\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}