{"ast":null,"code":"var _jsxFileName = \"A:\\\\Desktop\\\\Coding\\\\careerfoundry\\\\meet\\\\src\\\\EventGenre.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EventGenre = _ref => {\n  _s();\n\n  let {\n    events\n  } = _ref;\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    setData(() => getData());\n  }, [events]);\n\n  getData = () => {\n    const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\n    const data = genres.map(genre => {\n      const value = filter(_ref2 => {\n        let {\n          summary\n        } = _ref2;\n        return summary.split(' ').includes(genre);\n      }).length;\n      return {\n        name: genre,\n        value\n      };\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(PieChart, {\n      width: 400,\n      height: 400,\n      children: /*#__PURE__*/_jsxDEV(Pie, {\n        data: this.getData(),\n        cx: 200,\n        cy: 200,\n        labelLine: false,\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        dataKey: \"value\",\n        label: _ref3 => {\n          let {\n            name,\n            percent\n          } = _ref3;\n          return `${name} ${(percent * 100).toFixed(0)}%`;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EventGenre, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = EventGenre;\nexport default EventGenre;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventGenre\");","map":{"version":3,"sources":["A:/Desktop/Coding/careerfoundry/meet/src/EventGenre.js"],"names":["React","useEffect","useState","PieChart","Pie","Cell","ResponsiveContainer","EventGenre","events","data","setData","getData","genres","map","genre","value","filter","summary","split","includes","length","name","percent","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,mBAA9B,QAAyD,UAAzD;;;AAIA,MAAMC,UAAU,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAE/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,OAAO,CAAC,MAAMC,OAAO,EAAd,CAAP;AACH,GAFQ,EAEN,CAACH,MAAD,CAFM,CAAT;;AAIAG,EAAAA,OAAO,GAAG,MAAM;AACZ,UAAMC,MAAM,GAAG,CAAC,OAAD,EAAU,YAAV,EAAwB,MAAxB,EAAgC,QAAhC,EAA0C,WAA1C,CAAf;AACA,UAAMH,IAAI,GAAGG,MAAM,CAACC,GAAP,CAAYC,KAAD,IAAW;AAC/B,YAAMC,KAAK,GAAGC,MAAM,CAAC;AAAA,YAAC;AAAEC,UAAAA;AAAF,SAAD;AAAA,eAAiBA,OAAO,CAACC,KAAR,CAAc,GAAd,EAAmBC,QAAnB,CAA4BL,KAA5B,CAAjB;AAAA,OAAD,CAAN,CAA4DM,MAA1E;AACA,aAAO;AAAEC,QAAAA,IAAI,EAAEP,KAAR;AAAeC,QAAAA;AAAf,OAAP;AACH,KAHY,CAAb;AAIA,WAAON,IAAP;AACH,GAPD;;AASA,sBACI,QAAC,mBAAD;AAAqB,IAAA,MAAM,EAAE,GAA7B;AAAA,2BACA,QAAC,QAAD;AAAU,MAAA,KAAK,EAAE,GAAjB;AAAsB,MAAA,MAAM,EAAE,GAA9B;AAAA,6BACE,QAAC,GAAD;AACE,QAAA,IAAI,EAAE,KAAKE,OAAL,EADR;AAEE,QAAA,EAAE,EAAE,GAFN;AAGE,QAAA,EAAE,EAAE,GAHN;AAIE,QAAA,SAAS,EAAE,KAJb;AAKE,QAAA,WAAW,EAAE,EALf;AAME,QAAA,IAAI,EAAC,SANP;AAOE,QAAA,OAAO,EAAC,OAPV;AAQE,QAAA,KAAK,EAAE;AAAA,cAAC;AAAEU,YAAAA,IAAF;AAAQC,YAAAA;AAAR,WAAD;AAAA,iBAAwB,GAAED,IAAK,IAAG,CAACC,OAAO,GAAG,GAAX,EAAgBC,OAAhB,CAAwB,CAAxB,CAA2B,GAA7D;AAAA;AART;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CAlCD;;GAAMhB,U;;KAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState} from 'react';\r\nimport { PieChart, Pie, Cell, ResponsiveContainer } from 'recharts';\r\n\r\n\r\n\r\nconst EventGenre = ({ events }) => {\r\n\r\n    const [data, setData] = useState([]);\r\n   \r\n    useEffect(() => {\r\n        setData(() => getData());\r\n    }, [events]);\r\n\r\n    getData = () => {\r\n        const genres = ['React', 'JavaScript', 'Node', 'jQuery', 'AngularJS'];\r\n        const data = genres.map((genre) => {\r\n            const value = filter(({ summary }) => summary.split(' ').includes(genre)).length;\r\n            return { name: genre, value};\r\n        });\r\n        return data;\r\n    };\r\n\r\n    return (\r\n        <ResponsiveContainer height={400}>\r\n        <PieChart width={400} height={400}>\r\n          <Pie\r\n            data={this.getData()}\r\n            cx={200}\r\n            cy={200}\r\n            labelLine={false}\r\n            outerRadius={80}\r\n            fill=\"#8884d8\"\r\n            dataKey=\"value\"\r\n            label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n          >\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n    )\r\n};\r\n\r\nexport default EventGenre;\r\n\r\n"]},"metadata":{},"sourceType":"module"}