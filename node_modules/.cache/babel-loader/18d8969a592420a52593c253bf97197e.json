{"ast":null,"code":"var _jsxFileName = \"A:\\\\Desktop\\\\Coding\\\\careerfoundry\\\\meet\\\\src\\\\NumberOfEvents.js\";\nimport React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NumberOfEvents extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      errorText: ''\n    };\n\n    this.handleInputChanged = event => {\n      let value = event.target.value;\n\n      if (value === '') {\n        value = undefined;\n      }\n\n      ; // If value is negative or greater 32, display an error, else update list of events\n\n      if (value <= 0 || value > 32) {\n        this.setState({\n          errorText: 'Select a number from 1 to 32'\n        });\n      } else {\n        this.props.updateNumberOfEvents(value);\n        this.setState({\n          errorText: ''\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"numberOfEvents\",\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        id: \"errorAlert\",\n        text: this.state.errorText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"number\",\n        placeholder: \"Number of events to show\",\n        onChange: this.handleInputChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default NumberOfEvents;","map":{"version":3,"sources":["A:/Desktop/Coding/careerfoundry/meet/src/NumberOfEvents.js"],"names":["React","Component","ErrorAlert","NumberOfEvents","state","errorText","handleInputChanged","event","value","target","undefined","setState","props","updateNumberOfEvents","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,SAA3B;;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCG,KADqC,GAC7B;AACNC,MAAAA,SAAS,EAAE;AADL,KAD6B;;AAAA,SAKrCC,kBALqC,GAKhBC,KAAK,IAAI;AAC5B,UAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB;;AACA,UAAIA,KAAK,KAAK,EAAd,EAAkB;AAAEA,QAAAA,KAAK,GAAGE,SAAR;AAAmB;;AAAA,OAFX,CAG5B;;AACA,UAAIF,KAAK,IAAI,CAAT,IAAcA,KAAK,GAAG,EAA1B,EAA8B;AAC5B,aAAKG,QAAL,CAAc;AACZN,UAAAA,SAAS,EAAE;AADC,SAAd;AAGD,OAJD,MAIO;AACL,aAAKO,KAAL,CAAWC,oBAAX,CAAgCL,KAAhC;AACA,aAAKG,QAAL,CAAc;AACZN,UAAAA,SAAS,EAAE;AADC,SAAd;AAGD;AACF,KAnBoC;AAAA;;AAqBrCS,EAAAA,MAAM,GAAG;AACP,wBAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,YAAf;AAA4B,QAAA,IAAI,EAAE,KAAKV,KAAL,CAAWC;AAA7C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,WAAW,EAAC,0BAHd;AAIE,QAAA,QAAQ,EAAE,KAAKC;AAJjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAaD;;AAnCoC;;AAsCvC,eAAeH,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n  state = {\r\n    errorText: ''\r\n  };\r\n\r\n  handleInputChanged = event => {\r\n    let value = event.target.value;\r\n    if (value === '') { value = undefined };\r\n    // If value is negative or greater 32, display an error, else update list of events\r\n    if (value <= 0 || value > 32) {\r\n      this.setState({\r\n        errorText: 'Select a number from 1 to 32'\r\n      })\r\n    } else {\r\n      this.props.updateNumberOfEvents(value);\r\n      this.setState({\r\n        errorText: ''\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className='numberOfEvents'>\r\n        <ErrorAlert id='errorAlert' text={this.state.errorText} />\r\n        <input\r\n          type='number'\r\n          className='number'\r\n          placeholder='Number of events to show'\r\n          onChange={this.handleInputChanged}\r\n        />\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;"]},"metadata":{},"sourceType":"module"}