{"ast":null,"code":"var _jsxFileName = \"A:\\\\Desktop\\\\Coding\\\\careerfoundry\\\\meet\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport './nprogress.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      events: [],\n      locations: []\n    };\n\n    this.updateEvents = location => {\n      getEvents().then(events => {\n        const locationEvents = location === 'all' ? events : events.filter(event => event.location === location);\n        this.setState({\n          events: locationEvents\n        });\n      });\n    };\n  }\n\n  componentDidMont() {\n    this.mounted = true;\n    getEvents().then(events => {\n      this.setState({\n        events,\n        locations: extractLocations(events)\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(CitySearch, {\n        locations: this.state.locations,\n        updateEvents: this.updateEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventList, {\n        events: this.state.events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberOfEvents, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["A:/Desktop/Coding/careerfoundry/meet/src/App.js"],"names":["React","Component","EventList","CitySearch","NumberOfEvents","extractLocations","getEvents","App","state","events","locations","updateEvents","location","then","locationEvents","filter","event","setState","componentDidMont","mounted","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAO,iBAAP;;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,SAAS,EAAE;AAFL,KAFkB;;AAAA,SAO1BC,YAP0B,GAOVC,QAAD,IAAc;AAC3BN,MAAAA,SAAS,GAAGO,IAAZ,CAAkBJ,MAAD,IAAY;AAC3B,cAAMK,cAAc,GAAIF,QAAQ,KAAK,KAAd,GAAuBH,MAAvB,GAAgCA,MAAM,CAACM,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACJ,QAAN,KAAmBA,QAA5C,CAAvD;AACA,aAAKK,QAAL,CAAc;AACZR,UAAAA,MAAM,EAAEK;AADI,SAAd;AAGD,OALD;AAMD,KAdyB;AAAA;;AAgB1BI,EAAAA,gBAAgB,GAAG;AACjB,SAAKC,OAAL,GAAe,IAAf;AACAb,IAAAA,SAAS,GAAGO,IAAZ,CAAkBJ,MAAD,IAAY;AAC3B,WAAKQ,QAAL,CAAc;AAAER,QAAAA,MAAF;AAAUC,QAAAA,SAAS,EAAEL,gBAAgB,CAACI,MAAD;AAArC,OAAd;AACD,KAFD;AAGD;;AAEDW,EAAAA,oBAAoB,GAAG;AACrB,SAAKD,OAAL,GAAe,KAAf;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKb,KAAL,CAAWE,SAAlC;AAA6C,QAAA,YAAY,EAAE,KAAKC;AAAhE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAW,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAnCyB;;AAsC5B,eAAeF,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents } from './api';\nimport './nprogress.css';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: []\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ? events : events.filter((event) => event.location === location);\n      this.setState({\n        events: locationEvents\n      });\n    });\n  }\n\n  componentDidMont() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      this.setState({ events, locations: extractLocations(events) });\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}