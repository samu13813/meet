{"ast":null,"code":"var _jsxFileName = \"A:\\\\Desktop\\\\Coding\\\\careerfoundry\\\\meet\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\nimport './nprogress.css';\nimport WelcomeScreen from './WelcomeScreen';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport EventGenre from './EventGenre';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      events: [],\n      locations: [],\n      numberOfEvents: 32,\n      currentLocation: 'all',\n      offlineText: '',\n      showWelcomeScreen: undefined\n    };\n\n    this.updateNumberOfEvents = numberOfEvents => {\n      this.setState({\n        numberOfEvents\n      }, this.updateEvents(this.state.locations, numberOfEvents));\n    };\n\n    this.updateEvents = (location, eventCount) => {\n      console.log('update events token valid: ', this.state.tokenCheck);\n      const {\n        currentLocation,\n        numberOfEvents\n      } = this.state;\n\n      if (location) {\n        getEvents().then(response => {\n          const locationEvents = location === \"all\" ? response.events : response.events.filter(event => event.location === location);\n          const events = locationEvents.slice(0, numberOfEvents);\n          return this.setState({\n            events: events,\n            currentLocation: location,\n            locations: response.locations\n          });\n        });\n      } else {\n        getEvents().then(response => {\n          const locationEvents = currentLocation === \"all\" ? response.events : response.events.filter(event => event.location === currentLocation);\n          const events = locationEvents.slice(0, eventCount);\n          return this.setState({\n            events: events,\n            numberOfEvents: eventCount,\n            locations: response.locations\n          });\n        });\n      }\n    };\n\n    this.getData = () => {\n      const {\n        locations,\n        events\n      } = this.state;\n      const data = locations.map(location => {\n        const number = events.filter(event => event.location === location).length;\n        const city = location.split(', ').shift();\n        return {\n          city,\n          number\n        };\n      });\n      return data;\n    };\n  }\n\n  // async componentDidMount() {\n  //   this.mounted = true;\n  //   const accessToken = localStorage.getItem('access_token');\n  //   const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n  //   const searchParams = new URLSearchParams(window.location.search);\n  //   const code = searchParams.get('code');\n  //   this.setState({ showWelcomeScreen: !(code || isTokenValid ) });\n  //   if ((code || isTokenValid) && this.mounted) {\n  //     getEvents().then((events) => {\n  //       if (this.mounted) {\n  //         this.setState({ events, locations: extractLocations(events) });\n  //       }\n  //     });\n  //   }  \n  // };\n  async componentDidMount() {\n    this.mounted = true;\n\n    if (navigator.onLine && !window.location.href.startsWith('http://localhost')) {\n      const accessToken = localStorage.getItem('access_token');\n      const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n      const searchParams = new URLSearchParams(window.location.search);\n      const code = searchParams.get(\"code\");\n      this.setState({\n        showWelcomeScreen: !(code || isTokenValid)\n      });\n\n      if ((code || isTokenValid) && this.mounted) {\n        getEvents().then(events => {\n          if (this.mounted) {\n            this.setState({\n              events,\n              locations: extractLocations(events),\n              warningText: ''\n            });\n          }\n        });\n      }\n    } else {\n      getEvents().then(events => {\n        if (this.mounted) {\n          this.setState({\n            events,\n            locations: extractLocations(events),\n            warningText: 'You are offline. The displayed event list may not be up to date.',\n            showWelcomeScreen: false\n          });\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const {\n      events\n    } = this.state;\n    if (this.state.showWelcomeScreen === undefined) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 60\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MEET APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CitySearch, {\n        locations: this.state.locations,\n        updateEvents: this.updateEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberOfEvents, {\n        numberOfEvents: this.state.numberOfEvents,\n        updateNumberOfEvents: this.updateNumberOfEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-vis-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(EventGenre, {\n          events: events\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            margin: {\n              top: 20,\n              right: 20,\n              bottom: 20,\n              left: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              type: \"category\",\n              dataKey: \"city\",\n              name: \"city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              type: \"number\",\n              dataKey: \"number\",\n              name: \"number of events\",\n              allowDecimals: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              cursor: {\n                strokeDasharray: '3 3'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: this.getData(),\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventList, {\n        events: this.state.events,\n        numberOfEvents: this.state.numberOfEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n        showWelcomeScreen: this.state.showWelcomeScreen,\n        getAccessToken: () => {\n          getAccessToken();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["A:/Desktop/Coding/careerfoundry/meet/src/App.js"],"names":["React","Component","EventList","CitySearch","NumberOfEvents","extractLocations","getEvents","checkToken","getAccessToken","WelcomeScreen","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","EventGenre","App","state","events","locations","numberOfEvents","currentLocation","offlineText","showWelcomeScreen","undefined","updateNumberOfEvents","setState","updateEvents","location","eventCount","console","log","tokenCheck","then","response","locationEvents","filter","event","slice","getData","data","map","number","length","city","split","shift","componentDidMount","mounted","navigator","onLine","window","href","startsWith","accessToken","localStorage","getItem","isTokenValid","error","searchParams","URLSearchParams","search","code","get","warningText","componentWillUnmount","render","top","right","bottom","left","strokeDasharray"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\nimport './nprogress.css';\nimport WelcomeScreen from './WelcomeScreen';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport EventGenre from './EventGenre';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentLocation: 'all',\n    offlineText: '',\n    showWelcomeScreen: undefined\n  };\n\n  // async componentDidMount() {\n  //   this.mounted = true;\n  //   const accessToken = localStorage.getItem('access_token');\n  //   const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n  //   const searchParams = new URLSearchParams(window.location.search);\n  //   const code = searchParams.get('code');\n  //   this.setState({ showWelcomeScreen: !(code || isTokenValid ) });\n  //   if ((code || isTokenValid) && this.mounted) {\n  //     getEvents().then((events) => {\n  //       if (this.mounted) {\n  //         this.setState({ events, locations: extractLocations(events) });\n  //       }\n  //     });\n  //   }  \n  // };\n\n  async componentDidMount() {\n    this.mounted = true;\n    if (navigator.onLine && !window.location.href.startsWith('http://localhost')) {\n      const accessToken = localStorage.getItem('access_token');\n      const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n      const searchParams = new URLSearchParams(window.location.search);\n      const code = searchParams.get(\"code\");\n      this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n      if ((code || isTokenValid) && this.mounted) {\n        getEvents().then((events) => {\n          if (this.mounted) {\n            this.setState({\n              events,\n              locations: extractLocations(events),\n              warningText: ''\n            });\n          }\n        });\n      }\n    } else {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({\n            events,\n            locations: extractLocations(events),\n            warningText: 'You are offline. The displayed event list may not be up to date.',\n            showWelcomeScreen: false\n          });\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  updateNumberOfEvents = (numberOfEvents) => {\n    this.setState(\n      { \n        numberOfEvents \n      }, \n      this.updateEvents(this.state.locations, numberOfEvents)\n    );\n  };\n\n  // updateEvents = (location, eventCount) => {\n  //   getEvents().then((events) => {\n  //     const locationEvents = (location === 'all') ?\n  //       events : \n  //       events.filter((event) => event.location === location);\n  //     if (this.mounted) {\n  //       this.setState({\n  //         events: locationEvents.slice(0, this.state.numberOfEvents),\n  //         numberOfEvents: eventCount\n  //       });\n  //     }\n  //   });\n  // };\n\n  updateEvents = (location, eventCount) => {\n    console.log('update events token valid: ', this.state.tokenCheck)\n    const { currentLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents().then((response) => {\n        const locationEvents =\n          location === \"all\"\n            ? response.events\n            : response.events.filter((event) => event.location === location);\n        const events = locationEvents.slice(0, numberOfEvents);\n        return this.setState({\n          events: events,\n          currentLocation: location,\n          locations: response.locations,\n        });\n      });\n    } else {\n      getEvents().then((response) => {\n        const locationEvents =\n          currentLocation === \"all\"\n            ? response.events\n            : response.events.filter(\n                (event) => event.location === currentLocation\n              );\n        const events = locationEvents.slice(0, eventCount);\n        return this.setState({\n          events: events,\n          numberOfEvents: eventCount,\n          locations: response.locations,\n        });\n      });\n    }\n  };\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(', ').shift()\n      return { city, number };\n    })\n    return data;\n  };\n  \n  \n  render() {\n    \n    const { events } = this.state;\n\n    if (this.state.showWelcomeScreen === undefined) return <div className='App' />\n\n    return (\n      <div className='App'>\n        <h1>MEET APP</h1>\n\n        <CitySearch \n          locations={this.state.locations} \n          updateEvents={this.updateEvents} \n        />\n\n        <NumberOfEvents \n          numberOfEvents={this.state.numberOfEvents} \n          updateNumberOfEvents={this.updateNumberOfEvents} \n        />\n\n        <div className='data-vis-wrapper'>\n\n        <EventGenre events={events} />\n\n        <ResponsiveContainer height={400} >\n          <ScatterChart\n            margin={{\n              top: 20, right: 20, bottom: 20, left: 20,\n            }}\n          >\n            <CartesianGrid />\n            <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n            <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false} />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            <Scatter data={this.getData()} fill=\"#8884d8\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n\n        </div>\n                \n        <EventList \n          events={this.state.events} \n          numberOfEvents={this.state.numberOfEvents}\n        />     \n\n        <WelcomeScreen \n        showWelcomeScreen={this.state.showWelcomeScreen}\n        getAccessToken={() => { getAccessToken() }} \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}