{"ast":null,"code":"var _jsxFileName = \"A:\\\\Desktop\\\\Coding\\\\careerfoundry\\\\meet\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\nimport './nprogress.css';\nimport WelcomeScreen from './WelcomeScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      events: [],\n      locations: [],\n      numberOfEvents: 32,\n      offlineText: '',\n      showWelcomeScreen: undefined\n    };\n\n    this.updateNumberOfEvents = numberOfEvents => {\n      this.setState({\n        numberOfEvents\n      }, this.updateEvents(this.state.locations, numberOfEvents));\n    };\n\n    this.updateEvents = (location, eventCount) => {\n      console.log('update events token valid: ', this.state.tokenCheck);\n      const {\n        currentLocation,\n        numberOfEvents\n      } = this.state;\n\n      if (location) {\n        getEvents().then(response => {\n          const locationEvents = location === \"all\" ? response.events : response.events.filter(event => event.location === location);\n          const events = locationEvents.slice(0, numberOfEvents);\n          return this.setState({\n            events: events,\n            currentLocation: location,\n            locations: response.locations\n          });\n        });\n      } else {\n        getEvents().then(response => {\n          const locationEvents = currentLocation === \"all\" ? response.events : response.events.filter(event => event.location === currentLocation);\n          const events = locationEvents.slice(0, eventCount);\n          return this.setState({\n            events: events,\n            numberOfEvents: eventCount,\n            locations: response.locations\n          });\n        });\n      }\n    };\n  }\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n    this.setState({\n      showWelcomeScreen: !(code || isTokenValid)\n    });\n\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then(events => {\n        if (this.mounted) {\n          this.setState({\n            events,\n            locations: extractLocations(events)\n          });\n        }\n      });\n    }\n  }\n\n  // async componentDidMount() {\n  //   this.mounted = true;\n  //   if (navigator.onLine && !window.location.href.startsWith('http://localhost')) {\n  //     const accessToken = localStorage.getItem('access_token');\n  //     const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n  //     const searchParams = new URLSearchParams(window.location.search);\n  //     const code = searchParams.get(\"code\");\n  //     if ((code || isTokenValid) && this.mounted) {\n  //       getEvents().then((events) => {\n  //         if (this.mounted) {\n  //           this.setState({\n  //             events,\n  //             locations: extractLocations(events),\n  //             warningText: ''\n  //           });\n  //         }\n  //       });\n  //     }\n  //   } else {\n  //     getEvents().then((events) => {\n  //       if (this.mounted) {\n  //         this.setState({\n  //           events,\n  //           locations: extractLocations(events),\n  //           warningText: 'You are offline. The displayed event list may not be up to date.',\n  //           showWelcomeScreen: false\n  //         });\n  //       }\n  //     });\n  //   }\n  // };\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    if (this.state.showWelcomeScreen === undefined) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 60\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MEET APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CitySearch, {\n        locations: this.state.locations,\n        updateEvents: this.updateEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberOfEvents, {\n        numberOfEvents: this.state.numberOfEvents,\n        updateNumberOfEvents: this.updateNumberOfEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventList, {\n        events: this.state.events,\n        numberOfEvents: this.state.numberOfEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n        showWelcomeScreen: this.state.showWelcomeScreen,\n        getAccessToken: () => {\n          getAccessToken();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["A:/Desktop/Coding/careerfoundry/meet/src/App.js"],"names":["React","Component","EventList","CitySearch","NumberOfEvents","extractLocations","getEvents","checkToken","getAccessToken","WelcomeScreen","App","state","events","locations","numberOfEvents","offlineText","showWelcomeScreen","undefined","updateNumberOfEvents","setState","updateEvents","location","eventCount","console","log","tokenCheck","currentLocation","then","response","locationEvents","filter","event","slice","componentDidMount","mounted","accessToken","localStorage","getItem","isTokenValid","error","searchParams","URLSearchParams","window","search","code","get","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\nimport './nprogress.css';\nimport WelcomeScreen from './WelcomeScreen';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    offlineText: '',\n    showWelcomeScreen: undefined\n  };\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get('code');\n    this.setState({ showWelcomeScreen: !(code || isTokenValid ) });\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then((events) => {\n        if (this.mounted) {\n          this.setState({ events, locations: extractLocations(events) });\n        }\n      });\n    }  \n  };\n\n  // async componentDidMount() {\n  //   this.mounted = true;\n  //   if (navigator.onLine && !window.location.href.startsWith('http://localhost')) {\n  //     const accessToken = localStorage.getItem('access_token');\n  //     const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n  //     const searchParams = new URLSearchParams(window.location.search);\n  //     const code = searchParams.get(\"code\");\n  //     if ((code || isTokenValid) && this.mounted) {\n  //       getEvents().then((events) => {\n  //         if (this.mounted) {\n  //           this.setState({\n  //             events,\n  //             locations: extractLocations(events),\n  //             warningText: ''\n  //           });\n  //         }\n  //       });\n  //     }\n  //   } else {\n  //     getEvents().then((events) => {\n  //       if (this.mounted) {\n  //         this.setState({\n  //           events,\n  //           locations: extractLocations(events),\n  //           warningText: 'You are offline. The displayed event list may not be up to date.',\n  //           showWelcomeScreen: false\n  //         });\n  //       }\n  //     });\n  //   }\n  // };\n\n  componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  updateNumberOfEvents = (numberOfEvents) => {\n    this.setState(\n      { \n        numberOfEvents \n      }, \n      this.updateEvents(this.state.locations, numberOfEvents)\n    );\n  };\n\n  // updateEvents = (location, eventCount) => {\n  //   getEvents().then((events) => {\n  //     const locationEvents = (location === 'all') ?\n  //       events : \n  //       events.filter((event) => event.location === location);\n  //     if (this.mounted) {\n  //       this.setState({\n  //         events: locationEvents.slice(0, this.state.numberOfEvents),\n  //         numberOfEvents: eventCount\n  //       });\n  //     }\n  //   });\n  // };\n\n  updateEvents = (location, eventCount) => {\n    console.log('update events token valid: ', this.state.tokenCheck)\n    const { currentLocation, numberOfEvents } = this.state;\n    if (location) {\n      getEvents().then((response) => {\n        const locationEvents =\n          location === \"all\"\n            ? response.events\n            : response.events.filter((event) => event.location === location);\n        const events = locationEvents.slice(0, numberOfEvents);\n        return this.setState({\n          events: events,\n          currentLocation: location,\n          locations: response.locations,\n        });\n      });\n    } else {\n      getEvents().then((response) => {\n        const locationEvents =\n          currentLocation === \"all\"\n            ? response.events\n            : response.events.filter(\n                (event) => event.location === currentLocation\n              );\n        const events = locationEvents.slice(0, eventCount);\n        return this.setState({\n          events: events,\n          numberOfEvents: eventCount,\n          locations: response.locations,\n        });\n      });\n    }\n  };\n  \n  render() {\n\n    if (this.state.showWelcomeScreen === undefined) return <div className='App' />\n\n    return (\n      <div className='App'>\n        <h1>MEET APP</h1>\n        <CitySearch \n          locations={this.state.locations} \n          updateEvents={this.updateEvents} \n        />\n        <NumberOfEvents \n          numberOfEvents={this.state.numberOfEvents} \n          updateNumberOfEvents={this.updateNumberOfEvents} \n        />\n        <EventList \n          events={this.state.events} \n          numberOfEvents={this.state.numberOfEvents}\n        />\n        <WelcomeScreen \n        showWelcomeScreen={this.state.showWelcomeScreen}\n        getAccessToken={() => { getAccessToken() }} \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}