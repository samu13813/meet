{"ast":null,"code":"var _jsxFileName = \"A:\\\\Desktop\\\\Coding\\\\careerfoundry\\\\meet\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./nprogress.css\";\nimport EventList from \"./EventList\";\nimport CitySearch from \"./CitySearch\";\nimport Login from \"./Login\";\nimport NumberOfEvents from \"./NumberOfEvents\";\nimport { getEvents, checkToken, getToken } from \"./api\";\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport EventGenre from \"./EventGenre\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      events: [],\n      page: null,\n      currentLocation: \"all\",\n      offlineText: \"\",\n      numberOfEvents: 32,\n      locations: [],\n      tokenCheck: false\n    };\n\n    this.getData = () => {\n      const {\n        locations,\n        events\n      } = this.state;\n      const data = locations.map(location => {\n        const number = events.filter(event => event.location === location).length;\n        const city = location.split(\" \").shift();\n        return {\n          city,\n          number\n        };\n      });\n      return data;\n    };\n\n    this.updateEvents = (location, eventCount) => {\n      console.log('update events token valid: ', this.state.tokenCheck);\n      const {\n        currentLocation,\n        numberOfEvents\n      } = this.state;\n\n      if (location) {\n        getEvents().then(response => {\n          const locationEvents = location === \"all\" ? response.events : response.events.filter(event => event.location === location);\n          const events = locationEvents.slice(0, numberOfEvents);\n          return this.setState({\n            events: events,\n            currentLocation: location,\n            locations: response.locations\n          });\n        });\n      } else {\n        getEvents().then(response => {\n          const locationEvents = currentLocation === \"all\" ? response.events : response.events.filter(event => event.location === currentLocation);\n          const events = locationEvents.slice(0, eventCount);\n          return this.setState({\n            events: events,\n            numberOfEvents: eventCount,\n            locations: response.locations\n          });\n        });\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const accessToken = localStorage.getItem(\"access_token\");\n    const validToken = accessToken !== null ? await checkToken(accessToken) : false;\n    this.setState({\n      tokenCheck: validToken\n    });\n    if (validToken === true) this.updateEvents();\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    this.mounted = true;\n\n    if (code && this.mounted === true && validToken === false) {\n      this.setState({\n        tokenCheck: true\n      });\n      this.updateEvents();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const {\n      locations,\n      numberOfEvents,\n      events,\n      tokenCheck\n    } = this.state;\n    return tokenCheck === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Meet App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Choose your nearest city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CitySearch, {\n        updateEvents: this.updateEvents,\n        locations: locations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberOfEvents, {\n        updateEvents: this.updateEvents,\n        numberOfEvents: numberOfEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-vis-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(EventGenre, {\n          locations: locations,\n          events: events\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            margin: {\n              top: 20,\n              right: 20,\n              bottom: 20,\n              left: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              type: \"category\",\n              dataKey: \"city\",\n              name: \"city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              allowDecimals: false,\n              type: \"number\",\n              dataKey: \"number\",\n              name: \"number of events\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              cursor: {\n                strokeDasharray: \"3 3\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: this.getData(),\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventList, {\n        events: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["A:/Desktop/Coding/careerfoundry/meet/src/App.js"],"names":["React","Component","EventList","CitySearch","Login","NumberOfEvents","getEvents","checkToken","getToken","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","EventGenre","App","state","events","page","currentLocation","offlineText","numberOfEvents","locations","tokenCheck","getData","data","map","location","number","filter","event","length","city","split","shift","updateEvents","eventCount","console","log","then","response","locationEvents","slice","setState","componentDidMount","accessToken","localStorage","getItem","validToken","searchParams","URLSearchParams","window","search","code","get","mounted","componentWillUnmount","render","top","right","bottom","left","strokeDasharray"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport \"./nprogress.css\";\r\nimport EventList from \"./EventList\";\r\nimport CitySearch from \"./CitySearch\";\r\nimport Login from \"./Login\";\r\nimport NumberOfEvents from \"./NumberOfEvents\";\r\nimport { getEvents, checkToken, getToken } from \"./api\";\r\nimport {\r\n  ScatterChart,\r\n  Scatter,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport EventGenre from \"./EventGenre\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    events: [],\r\n    page: null,\r\n    currentLocation: \"all\",\r\n    offlineText: \"\",\r\n    numberOfEvents: 32,\r\n    locations: [],\r\n    tokenCheck: false,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const accessToken = localStorage.getItem(\"access_token\");\r\n    const validToken = accessToken !== null  ? await checkToken(accessToken) : false;\r\n    this.setState({ tokenCheck: validToken });\r\n    if(validToken === true) this.updateEvents()\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get(\"code\");\r\n\r\n    this.mounted = true;\r\n    if (code && this.mounted === true && validToken === false){ \r\n      this.setState({tokenCheck:true });\r\n      this.updateEvents()\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  getData = () => {\r\n    const { locations, events } = this.state;\r\n    const data = locations.map((location) => {\r\n      const number = events.filter((event) => event.location === location)\r\n        .length;\r\n      const city = location.split(\" \").shift();\r\n      return { city, number };\r\n    });\r\n    return data;\r\n  };\r\n\r\n  updateEvents = (location, eventCount) => {\r\n    console.log('update events token valid: ', this.state.tokenCheck)\r\n    const { currentLocation, numberOfEvents } = this.state;\r\n    if (location) {\r\n      getEvents().then((response) => {\r\n        const locationEvents =\r\n          location === \"all\"\r\n            ? response.events\r\n            : response.events.filter((event) => event.location === location);\r\n        const events = locationEvents.slice(0, numberOfEvents);\r\n        return this.setState({\r\n          events: events,\r\n          currentLocation: location,\r\n          locations: response.locations,\r\n        });\r\n      });\r\n    } else {\r\n      getEvents().then((response) => {\r\n        const locationEvents =\r\n          currentLocation === \"all\"\r\n            ? response.events\r\n            : response.events.filter(\r\n                (event) => event.location === currentLocation\r\n              );\r\n        const events = locationEvents.slice(0, eventCount);\r\n        return this.setState({\r\n          events: events,\r\n          numberOfEvents: eventCount,\r\n          locations: response.locations,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { locations, numberOfEvents, events, tokenCheck } = this.state;\r\n    return tokenCheck === false ? (\r\n      <div className=\"App\">\r\n        <Login />\r\n      </div>\r\n    ) : (\r\n      <div className=\"App\">\r\n        <h1>Meet App</h1>\r\n        <h4>Choose your nearest city</h4>\r\n        <CitySearch updateEvents={this.updateEvents} locations={locations} />\r\n        <NumberOfEvents\r\n          updateEvents={this.updateEvents}\r\n          numberOfEvents={numberOfEvents}\r\n        />\r\n        <div className=\"data-vis-wrapper\">\r\n          <EventGenre locations={locations} events={events} />\r\n          <ResponsiveContainer height={400}>\r\n            <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }}>\r\n              <CartesianGrid />\r\n              <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\r\n              <YAxis\r\n                allowDecimals={false}\r\n                type=\"number\"\r\n                dataKey=\"number\"\r\n                name=\"number of events\"\r\n              />\r\n              <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\r\n              <Scatter data={this.getData()} fill=\"#8884d8\" />\r\n            </ScatterChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <EventList events={events} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}