{"ast":null,"code":"var _jsxFileName = \"A:\\\\Desktop\\\\Coding\\\\careerfoundry\\\\meet\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\nimport './nprogress.css';\nimport WelcomeScreen from './WelcomeScreen';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport EventGenre from './EventGenre';\nimport { WarningAlert } from './Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      events: [],\n      locations: [],\n      numberOfEvents: 32,\n      currentLocation: 'all',\n      warningText: '',\n      showWelcomeScreen: undefined\n    };\n\n    this.updateEvents = location => {\n      getEvents().then(events => {\n        const locationEvents = location === 'all' ? events : events.filter(event => event.location === location);\n        const shownEvents = locationEvents.slice(0, this.state.numberOfEvents);\n        this.setState({\n          events: shownEvents,\n          currentLocation: location\n        });\n      });\n    };\n\n    this.updateNumberOfEvents = number => {\n      const newNum = number;\n      this.setState({\n        numberOfEvents: newNum\n      });\n      this.updateEvents(this.state.currentLocation);\n    };\n\n    this.getData = () => {\n      const {\n        locations,\n        events\n      } = this.state;\n      const data = locations.map(location => {\n        const number = events.filter(event => event.location === location).length;\n        const city = location.split(', ').shift();\n        return {\n          city,\n          number\n        };\n      });\n      return data;\n    };\n  }\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    this.setState({\n      showWelcomeScreen: !(code || isTokenValid)\n    });\n\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then(events => {\n        if (this.mounted) {\n          this.setState({\n            events,\n            locations: extractLocations(events)\n          });\n        }\n      });\n    }\n\n    if (!navigator.onLine) {\n      this.setState({\n        OfflineAlertText: 'You are not connected to the internet'\n      });\n    } else {\n      this.setState({\n        OfflineAlertText: ''\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const {\n      events\n    } = this.state;\n    if (this.state.showWelcomeScreen === undefined) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 60\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MEET APP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CitySearch, {\n        locations: this.state.locations,\n        updateEvents: this.updateEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumberOfEvents, {\n        numberOfEvents: this.state.numberOfEvents,\n        updateNumberOfEvents: this.updateNumberOfEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data-vis-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(EventGenre, {\n          events: events\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          height: 400,\n          children: /*#__PURE__*/_jsxDEV(ScatterChart, {\n            margin: {\n              top: 20,\n              right: 20,\n              bottom: 20,\n              left: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              type: \"category\",\n              dataKey: \"city\",\n              name: \"city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              type: \"number\",\n              dataKey: \"number\",\n              name: \"number of events\",\n              allowDecimals: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n              cursor: {\n                strokeDasharray: '3 3'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Scatter, {\n              data: this.getData(),\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EventList, {\n        events: this.state.events,\n        numberOfEvents: this.state.numberOfEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WelcomeScreen, {\n        showWelcomeScreen: this.state.showWelcomeScreen,\n        getAccessToken: () => {\n          getAccessToken();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["A:/Desktop/Coding/careerfoundry/meet/src/App.js"],"names":["React","Component","EventList","CitySearch","NumberOfEvents","extractLocations","getEvents","checkToken","getAccessToken","WelcomeScreen","ScatterChart","Scatter","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","EventGenre","WarningAlert","App","state","events","locations","numberOfEvents","currentLocation","warningText","showWelcomeScreen","undefined","updateEvents","location","then","locationEvents","filter","event","shownEvents","slice","setState","updateNumberOfEvents","number","newNum","getData","data","map","length","city","split","shift","componentDidMount","mounted","accessToken","localStorage","getItem","isTokenValid","error","searchParams","URLSearchParams","window","search","code","get","navigator","onLine","OfflineAlertText","componentWillUnmount","render","top","right","bottom","left","strokeDasharray"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './EventList';\nimport CitySearch from './CitySearch';\nimport NumberOfEvents from './NumberOfEvents';\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './api';\nimport './nprogress.css';\nimport WelcomeScreen from './WelcomeScreen';\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport EventGenre from './EventGenre';\nimport { WarningAlert } from './Alert';\n\nclass App extends Component {\n\n  state = {\n    events: [],\n    locations: [],\n    numberOfEvents: 32,\n    currentLocation: 'all',\n    warningText: '',\n    showWelcomeScreen: undefined\n  };\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      const locationEvents = (location === 'all') ? events : events.filter((event) => event.location === location);\n      const shownEvents = locationEvents.slice(0, this.state.numberOfEvents);\n      this.setState({\n        events: shownEvents,\n        currentLocation: location\n      });\n    });\n  }\n\n  updateNumberOfEvents = (number) => {\n    const newNum = number;\n    this.setState({\n      numberOfEvents: newNum\n    });\n    this.updateEvents(this.state.currentLocation);\n  };\n\n  getData = () => {\n    const {locations, events} = this.state;\n    const data = locations.map((location)=>{\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(', ').shift()\n      return {city, number};\n    })\n      return data;\n  };\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false: true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n      if ((code || isTokenValid) && this.mounted) {\n        getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({ events, locations: extractLocations(events) });\n        }\n      });\n    }\n      if (!navigator.onLine) {\n        this.setState({\n          OfflineAlertText: 'You are not connected to the internet'\n        });\n      } else {\n        this.setState({\n          OfflineAlertText: ''\n        });\n      }\n  }\n\n  componentWillUnmount(){\n    this.mounted = false;\n  }\n\n  \n  render() {\n    \n    const { events } = this.state;\n\n    if (this.state.showWelcomeScreen === undefined) return <div className='App' />\n\n    return (\n      <div className='App'>\n        <h1>MEET APP</h1>\n\n        <CitySearch \n          locations={this.state.locations} \n          updateEvents={this.updateEvents} \n        />\n\n        <NumberOfEvents \n          numberOfEvents={this.state.numberOfEvents} \n          updateNumberOfEvents={this.updateNumberOfEvents} \n        />\n\n        <div className='data-vis-wrapper'>\n\n        <EventGenre events={events} />\n\n        <ResponsiveContainer height={400} >\n          <ScatterChart\n            margin={{\n              top: 20, right: 20, bottom: 20, left: 20,\n            }}\n          >\n            <CartesianGrid />\n            <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\n            <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" allowDecimals={false} />\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n            <Scatter data={this.getData()} fill=\"#8884d8\" />\n          </ScatterChart>\n        </ResponsiveContainer>\n\n        </div>\n                \n        <EventList \n          events={this.state.events} \n          numberOfEvents={this.state.numberOfEvents}\n        />     \n\n        <WelcomeScreen \n        showWelcomeScreen={this.state.showWelcomeScreen}\n        getAccessToken={() => { getAccessToken() }} \n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}