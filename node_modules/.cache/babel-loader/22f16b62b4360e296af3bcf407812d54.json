{"ast":null,"code":"import _classCallCheck from\"A:/Desktop/Coding/careerfoundry/meet/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"A:/Desktop/Coding/careerfoundry/meet/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"A:/Desktop/Coding/careerfoundry/meet/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"A:/Desktop/Coding/careerfoundry/meet/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{InfoAlert}from'./Alert';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CitySearch=/*#__PURE__*/function(_Component){_inherits(CitySearch,_Component);var _super=_createSuper(CitySearch);function CitySearch(){var _this;_classCallCheck(this,CitySearch);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={query:'',suggestions:[],showSuggestions:undefined,infoText:''};_this.handleInputChanged=function(event){var value=event.target.value;_this.setState({showSuggestions:true});var suggestions=_this.props.locations.filter(function(location){return location.toUpperCase().indexOf(value.toUpperCase())>-1;});if(suggestions.length===0){_this.setState({query:value,infoText:'We cannot find the city you are looking for. Please try another city'});}else{return _this.setState({query:value,suggestions:suggestions,infoText:''});}};_this.handleItemClicked=function(suggestion){_this.setState({query:suggestion,showSuggestions:false});_this.props.updateEvents(suggestion);};return _this;}_createClass(CitySearch,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsxs(\"div\",{className:\"CitySearch\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Please introduce a city:\"}),/*#__PURE__*/_jsx(InfoAlert,{text:this.state.infoText}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"city\",value:this.state.query,onChange:this.handleInputChanged,onFocus:function onFocus(){_this2.setState({showSuggestions:true});}}),/*#__PURE__*/_jsxs(\"ul\",{className:\"suggestions\",style:this.state.showSuggestions?{}:{display:'none'},children:[this.state.suggestions.map(function(suggestion){return/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){return _this2.handleItemClicked(suggestion);},children:suggestion},suggestion);}),/*#__PURE__*/_jsx(\"li\",{onClick:function onClick(){return _this2.handleItemClicked('all');},children:/*#__PURE__*/_jsx(\"b\",{children:\"See all Cities\"})})]})]});}}]);return CitySearch;}(Component);export default CitySearch;","map":{"version":3,"sources":["A:/Desktop/Coding/careerfoundry/meet/src/CitySearch.js"],"names":["React","Component","InfoAlert","CitySearch","state","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","event","value","target","setState","props","locations","filter","location","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","display","map"],"mappings":"wdAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,SAAT,KAA0B,SAA1B,C,2FAEMC,CAAAA,U,2UAEFC,K,CAAQ,CACJC,KAAK,CAAE,EADH,CAEJC,WAAW,CAAE,EAFT,CAGJC,eAAe,CAAEC,SAHb,CAIJC,QAAQ,CAAE,EAJN,C,OAORC,kB,CAAqB,SAACC,KAAD,CAAW,CAC5B,GAAMC,CAAAA,KAAK,CAAGD,KAAK,CAACE,MAAN,CAAaD,KAA3B,CACA,MAAKE,QAAL,CAAc,CAACP,eAAe,CAAE,IAAlB,CAAd,EACA,GAAMD,CAAAA,WAAW,CAAG,MAAKS,KAAL,CAAWC,SAAX,CAAqBC,MAArB,CAA4B,SAACC,QAAD,CAAc,CAC1D,MAAOA,CAAAA,QAAQ,CAACC,WAAT,GAAuBC,OAAvB,CAA+BR,KAAK,CAACO,WAAN,EAA/B,EAAsD,CAAC,CAA9D,CACH,CAFmB,CAApB,CAGA,GAAIb,WAAW,CAACe,MAAZ,GAAuB,CAA3B,CAA8B,CAC1B,MAAKP,QAAL,CAAc,CACVT,KAAK,CAAEO,KADG,CAEVH,QAAQ,CAAE,sEAFA,CAAd,EAIH,CALD,IAKO,CACH,MAAO,OAAKK,QAAL,CAAc,CACjBT,KAAK,CAAEO,KADU,CAEjBN,WAAW,CAAXA,WAFiB,CAGjBG,QAAQ,CAAE,EAHO,CAAd,CAAP,CAKH,CACJ,C,OAEDa,iB,CAAoB,SAACC,UAAD,CAAgB,CAChC,MAAKT,QAAL,CAAc,CACVT,KAAK,CAAEkB,UADG,CAEVhB,eAAe,CAAE,KAFP,CAAd,EAIA,MAAKQ,KAAL,CAAWS,YAAX,CAAwBD,UAAxB,EACH,C,4DAED,iBAAS,iBACL,mBACI,aAAK,SAAS,CAAC,YAAf,wBACI,+CADJ,cAEI,KAAC,SAAD,EAAW,IAAI,CAAE,KAAKnB,KAAL,CAAWK,QAA5B,EAFJ,cAGI,cACI,IAAI,CAAC,MADT,CAEI,SAAS,CAAC,MAFd,CAGI,KAAK,CAAE,KAAKL,KAAL,CAAWC,KAHtB,CAII,QAAQ,CAAE,KAAKK,kBAJnB,CAKI,OAAO,CAAE,kBAAM,CAAE,MAAI,CAACI,QAAL,CAAc,CAAEP,eAAe,CAAE,IAAnB,CAAd,EAA0C,CAL/D,EAHJ,cAUI,YAAI,SAAS,CAAC,aAAd,CAA4B,KAAK,CAAE,KAAKH,KAAL,CAAWG,eAAX,CAA6B,EAA7B,CAAkC,CAAEkB,OAAO,CAAE,MAAX,CAArE,WACK,KAAKrB,KAAL,CAAWE,WAAX,CAAuBoB,GAAvB,CAA2B,SAACH,UAAD,qBACxB,WAEI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACD,iBAAL,CAAuBC,UAAvB,CAAN,EAFb,UAGEA,UAHF,EACSA,UADT,CADwB,EAA3B,CADL,cAOI,WAAI,OAAO,CAAE,yBAAM,CAAA,MAAI,CAACD,iBAAL,CAAuB,KAAvB,CAAN,EAAb,uBACI,qCADJ,EAPJ,GAVJ,GADJ,CAwBH,C,wBA9DoBrB,S,EAiEzB,cAAeE,CAAAA,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: undefined,\r\n        infoText: ''\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({showSuggestions: true});\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        })\r\n        if (suggestions.length === 0) {\r\n            this.setState({\r\n                query: value,\r\n                infoText: 'We cannot find the city you are looking for. Please try another city'\r\n            });\r\n        } else {\r\n            return this.setState({\r\n                query: value,\r\n                suggestions,\r\n                infoText: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false\r\n        });\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='CitySearch'>\r\n                <p>Please introduce a city:</p>\r\n                <InfoAlert text={this.state.infoText} />\r\n                <input\r\n                    type='text'\r\n                    className='city'\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n                />\r\n                <ul className='suggestions' style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li \r\n                            key={suggestion}\r\n                            onClick={() => this.handleItemClicked(suggestion)}\r\n                        >{suggestion}</li>\r\n                    ))}\r\n                    <li onClick={() => this.handleItemClicked('all')}>\r\n                        <b>See all Cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;"]},"metadata":{},"sourceType":"module"}